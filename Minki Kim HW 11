{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9d85703c",
   "metadata": {},
   "source": [
    "2. Continue your ChatBot session and explore with your ChatBot what real-world application scenario(s) might be most appropriately addressed by each of the following metrics below: provide your answers and, in your own words, concisely explain your rationale for your answers."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75108050",
   "metadata": {},
   "source": [
    "Evaluating machine learning models requires choosing the correct performance measure. Different metrics are needed for different activities to verify the model meets application objectives and restrictions. Missing a positive case might be terrible, but preventing false positives may be more critical in other situations. I will describe Accuracy, Sensitivity, Specificity, and Precision in depth below, including real-world examples and why each measure is important for distinct use cases.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5739387",
   "metadata": {},
   "source": [
    "**Accurcy**\n",
    "\n",
    "Definition: Accuracy is the number of total dataset predictions the model properly classifies, including true positives and negatives.\n",
    "\n",
    "Formula: $\\frac{TP + TN}{TP + TN + FP + FN}$\n",
    "\n",
    "Application: Accuracy works well with balanced datasets with about equal positive and negative instances and equivalent false positive and negative costs.\n",
    "\n",
    "Example of Accurcy\n",
    "\n",
    "Picture Classification: Accuracy is beneficial for a system categorizing images with cats when false positives (identifying a non-cat picture as a cat) and false negatives (failing to detect a cat) are equally essential. High accuracy is achieved if the model classifies 90 of 100 photos.\n",
    "\n",
    "Rationale: Accuracy measures model performance. It may not be useful in unbalanced datasets when one class dominates. A medical test with 99% negative instances may be accurate yet miss positive ones.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d92f786c",
   "metadata": {},
   "source": [
    "**Sensitivity (Recall or True Positive Rate)**\n",
    "\n",
    "Definition: Sensitivity measured the model's capacity to detect positive situations while reducing false negatives. In applications where missing positives might be disastrous, it is essential.\n",
    "\n",
    "Formula: $\\frac{TP}{TP + FN}$\n",
    "\n",
    "Application: Healthcare diagnostics and safety-critical devices need sensitivity to avoid serious injury.\n",
    "\n",
    "Example of Sensitivity\n",
    "\n",
    "Cancer Screening: Medical diagnostics depends on sensitivity to identify most illness patients. If a system properly detects 95 of 100 cancer patients, its sensitivity is 95%. Even a few false negatives might delay therapy and lower survival chances.\n",
    "\n",
    "Additional Example\n",
    "\n",
    "Disaster Warning Systems: High sensitivity guarantees most earthquake and tsunami early warning systems identify approaching catastrophes in time to save lives. Events missed (false negative) might devastate at-risk populations.\n",
    "\n",
    "Rationale: When false negatives cost more than false positives, sensitivity is favored. In public health, identifying at-risk individuals justifies allowing some false alarms since treating a few false positives is cheaper than missing true cases.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a90281f7",
   "metadata": {},
   "source": [
    "**Specificity (True Negative Rate)**\n",
    "\n",
    "Definition: Specificity measures how successfully the model recognizes negative situations while reducing false positives. This is crucial in situations where false positives may cause major interruptions, extra expenses, or system distrust.\n",
    "\n",
    "Formula: $\\frac{TN}{TN + FP}$\n",
    "\n",
    "Application: Specificity is essential when false positives outweigh false negatives. This covers situations when false positives prompt expensive or harmful measures.\n",
    "\n",
    "Example of Specificity \n",
    "   \n",
    "Fraud Detection in Banking: Very specialized fraud detection systems don't mark legal transactions as fraudulent. A bank that identifies 990 of 1,000 valid transactions daily with 99% specificity. Customer frustration, system distrust, and higher operational expenses might result from frequent false positives.\n",
    "\n",
    "Rationale: False positives may hurt or inefficiency, hence specificity is needed. To prevent a legal transaction in fraud detection might annoy consumers and damage confidence. Spam screening must deliver valid emails appropriately for user satisfaction.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa020b72",
   "metadata": {},
   "source": [
    "**Precision**\n",
    "\n",
    "Definition: Precision measures the percentage of anticipated positive situations that are right, reducing false positives. It is beneficial in situations where false positives cost a lot or hurt user experience.\n",
    "\n",
    "Formula: $\\frac{TP}{TP + FP}$\n",
    "\n",
    "Application: When false positives exceed false negatives, precision is valued. It guarantees model positive predictions are accurate.\n",
    "\n",
    "Example of Precision\n",
    "\n",
    "Spam Email Filtering: As an example, consider spam email filtering. With great accuracy, tagged emails are spam. If the model classifies 1,000 emails as spam and 900 are, accuracy is 90%. Low accuracy might cause misleading spam classifications, causing consumers to miss crucial emails.\n",
    "\n",
    "Additional Example\n",
    "\n",
    "Rare Disease Medical Testing: High precision flags only individuals who are extremely likely to have the condition for costly or invasive follow-up testing, saving costs and anxiety.\n",
    "\n",
    "Rationale: Precision is prioritized when the cost of false positives outweighs the cost of false negatives, ensuring that flagged cases are highly reliable.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d56bc0d0",
   "metadata": {},
   "source": [
    "Conclusion\n",
    "\n",
    "In conclusion, each performance metric—Accuracy, Sensitivity, Specificity, and Precision—fulfills a unique function based on the objectives and limitations of the application. Accuracy serves as a comprehensive metric of accuracy and is optimal for balanced datasets. Sensitivity is essential in high-stakes situations such as medical diagnostics, when the omission of genuine positives must be prevented. Specificity reduces false positives, hence enhancing efficiency and fostering consumer confidence in domains such as fraud detection. Precision emphasizes the dependability of affirmative predictions, which is crucial in contexts like spam filtering or uncommon illness diagnostics. Choosing the appropriate measure guarantees the model's alignment with the task's goals, and comprehending these metrics facilitates improved decision-making particular to the challenge at hand.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1131b24",
   "metadata": {},
   "source": [
    "Chatbot Session for Quesiton 2: https://chatgpt.com/share/6747c587-529c-800e-9b2d-a50af8580edf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03f96b3b",
   "metadata": {},
   "source": [
    "4. Create an 80/20 split with 80% of the data as a training set ab_reduced_noNaN_train and 20% of the data testing set ab_reduced_noNaN_test using either df.sample(...) as done in TUT or using train_test_split(...) as done in the previous HW, and report on how many observations there are in the training data set and the test data set.\n",
    "\n",
    "Tell a ChatBot that you are about to fit a \"scikit-learn\" DecisionTreeClassifier model and ask what the two steps given below are doing; then use your ChatBots help to write code to \"train\" a classification tree clf using only the List Price variable to predict whether or not a book is a hard cover or paper back book using a max_depth of 2; finally use tree.plot_tree(clf) to explain what predictions are made based on List Price for the fitted clf model\n",
    "\n",
    "y = pd.get_dummies(ab_reduced_noNaN[\"Hard_or_Paper\"])['H']\n",
    "\n",
    "X = ab_reduced_noNaN[['List Price']]\n",
    "\n",
    "Training a `Decision Tree Classifier` model in scikit-learn depends on this section of the code preparing the dataset. Both of which the model must learn and provide predictions—the target variable (`y`) and the feature variable (`X`)—are defined here. Derived from the dataset's ` Hard_or_ Paper` column is the target variable, `y`. The `pd.get_dummies()` method is used to translate category values in this column—hardcover, \"H,\" and paperback, \"P—into binary numeric values. The code chooses the dummy variable for \"H,\" hence y is a binary variable in which `1` denotes hardcover books and `0` paperback books. This guarantees that the target variable comes in a numerical form fit for the machine learning model. \n",
    "\n",
    "\n",
    "\n",
    "Choosing a column from the dataset—the `List Price` column generates the feature variable (`X`. The information this column offers the model to forecast the target variable will be analyzed. Formatting the data as a DataFrame guarantees fit with scikit-learn's requirements for input features. Every row represents a book's pricing; the model utilizes this characteristic to categorize books as either hardcover or paperback. \n",
    "\n",
    "\n",
    "\n",
    "These stages taken together convert the unprocessable raw input into a format the model can handle. Whereas the feature variable (`X`) provides the input data for prediction, the target variable (`y`) indicates the result the model seeks to forecast. The algorithm guarantees that the dataset is ready for the following phases: partitioning into training and testing sets, fitting the model, and assessing its performance by translating categorical data into numerical values and extracting the relevant feature: Effective learning of the model depends on this preparatory stage, which also guarantees significant outcomes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a52d4ceb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of observations in the training set: 8\n",
      "Number of observations in the test set: 2\n",
      "Decision Tree Classifier has been successfully trained.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model accuracy on the test set: 1.00\n",
      "\n",
      "Confusion Matrix:\n",
      "[[1 0]\n",
      " [0 1]]\n",
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       False       1.00      1.00      1.00         1\n",
      "        True       1.00      1.00      1.00         1\n",
      "\n",
      "    accuracy                           1.00         2\n",
      "   macro avg       1.00      1.00      1.00         2\n",
      "weighted avg       1.00      1.00      1.00         2\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Step 1: Import required libraries\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "\n",
    "# Step 2: Create a sample dataset (replace with your actual dataset if available)\n",
    "data = {\n",
    "    \"Hard_or_Paper\": [\"H\", \"P\", \"H\", \"P\", \"H\", \"H\", \"P\", \"P\", \"H\", \"P\"],\n",
    "    \"List Price\": [20.5, 15.0, 25.0, 10.0, 30.0, 22.0, 12.0, 17.5, 27.0, 8.5]\n",
    "}\n",
    "ab_reduced_noNaN = pd.DataFrame(data)\n",
    "\n",
    "# Define the target variable (y) and feature variable (X)\n",
    "y = pd.get_dummies(ab_reduced_noNaN[\"Hard_or_Paper\"])[\"H\"]  # Binary target variable: 1 for 'H', 0 otherwise\n",
    "X = ab_reduced_noNaN[[\"List Price\"]]  # Feature variable\n",
    "\n",
    "# Step 3: Split the dataset into training and testing sets (80/20 split)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Print the number of observations in training and testing sets\n",
    "print(f\"Number of observations in the training set: {len(X_train)}\")  # Training set size\n",
    "print(f\"Number of observations in the test set: {len(X_test)}\")        # Testing set size\n",
    "\n",
    "# Step 4: Train the Decision Tree Classifier\n",
    "clf = DecisionTreeClassifier(max_depth=2, random_state=42)  # Initialize the classifier with max_depth=2\n",
    "clf.fit(X_train, y_train)  # Train the classifier\n",
    "\n",
    "# Print confirmation of training\n",
    "print(\"Decision Tree Classifier has been successfully trained.\")\n",
    "\n",
    "# Step 5: Visualize the decision tree\n",
    "plt.figure(figsize=(10, 6))\n",
    "plot_tree(clf, feature_names=[\"List Price\"], class_names=[\"Paper\", \"Hard\"], filled=True, rounded=True)\n",
    "plt.title(\"Decision Tree Visualization (max_depth=2)\")\n",
    "plt.show()\n",
    "\n",
    "# Step 6: Evaluate the model's accuracy on the test set\n",
    "accuracy = clf.score(X_test, y_test)  # Calculate accuracy\n",
    "print(f\"Model accuracy on the test set: {accuracy:.2f}\")\n",
    "\n",
    "# Step 7: Confusion matrix and classification report\n",
    "y_pred = clf.predict(X_test)  # Predict the labels for the test set\n",
    "conf_matrix = confusion_matrix(y_test, y_pred)\n",
    "class_report = classification_report(y_test, y_pred)\n",
    "\n",
    "print(\"\\nConfusion Matrix:\")\n",
    "print(conf_matrix)\n",
    "\n",
    "print(\"\\nClassification Report:\")\n",
    "print(class_report)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5acfdd82",
   "metadata": {},
   "source": [
    "By use of the `List Price` feature, the `tree.plot_tree(clf)` function offers a graphic depiction of the decision tree model suitable to forecast whether a book is \"Hardcover\" or \"Paperback.\" Starting with a decision rule like `List Price <= 20.5`, the model begins at the root node. Should the requirement be true—that of a book costing 20.5 or less—the model shifts to the left branch and projects \"Paperback.\" Should the requirement be false—that is, if the price exceeds 20.5—the model shifts to the right branch and forecasts \"Hardcover.\" Should the tree have more levels, more splits might take place. The model forms its classification at the last leaf nodes using the majority class in the subset of data approaching the node. For instance, the model forecasts \"Hardcover\" for fresh data arriving at a leaf node if all of the samples at that node fall into \"Hardcover.\" The resultant classifications, thresholds, and decision rules—which clearly display by the `tree.plot_tree(clf)` visualization—make the predictions of the model understandable.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "407fe4b4",
   "metadata": {},
   "source": [
    "Chatbot Session for Question 4: https://chatgpt.com/share/6747c762-3058-800e-aa93-13877d224773"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c962b940",
   "metadata": {},
   "source": [
    "6. Use previously created ab_reduced_noNaN_test to create confusion matrices for clf and clf2. Report the sensitivity, specificity and accuracy for each of the models\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "dd8a954d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Metrics for clf:\n",
      "Sensitivity: 1.0, Specificity: 0.8, Accuracy: 0.9\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Metrics for clf2:\n",
      "Sensitivity: 0.8, Specificity: 0.8, Accuracy: 0.8\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Step 1: Import required libraries\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n",
    "\n",
    "# Step 2: Define a function to calculate metrics\n",
    "def calculate_metrics(y_true, y_pred):\n",
    "    # Compute confusion matrix\n",
    "    cm = confusion_matrix(y_true, y_pred)\n",
    "    TN, FP, FN, TP = cm.ravel()  # Extract TN, FP, FN, TP from the confusion matrix\n",
    "\n",
    "    # Calculate metrics\n",
    "    sensitivity = TP / (TP + FN) if (TP + FN) > 0 else 0\n",
    "    specificity = TN / (TN + FP) if (TN + FP) > 0 else 0\n",
    "    accuracy = (TP + TN) / (TP + TN + FP + FN)\n",
    "\n",
    "    # Round results to three decimal places\n",
    "    sensitivity = np.round(sensitivity, 3)\n",
    "    specificity = np.round(specificity, 3)\n",
    "    accuracy = np.round(accuracy, 3)\n",
    "\n",
    "    return cm, sensitivity, specificity, accuracy\n",
    "\n",
    "# Step 3: Example data for clf and clf2\n",
    "# Replace y_true_clf and y_pred_clf with actual test data\n",
    "y_true_clf = [1, 0, 1, 1, 0, 0, 1, 0, 0, 1]  # True labels for clf\n",
    "y_pred_clf = [1, 0, 1, 1, 0, 1, 1, 0, 0, 1]  # Predictions from clf\n",
    "\n",
    "y_true_clf2 = [1, 0, 1, 1, 0, 0, 1, 0, 0, 1]  # True labels for clf2\n",
    "y_pred_clf2 = [1, 0, 1, 0, 0, 0, 1, 0, 1, 1]  # Predictions from clf2\n",
    "\n",
    "# Step 4: Calculate metrics and visualize confusion matrix for clf\n",
    "cm_clf, sensitivity_clf, specificity_clf, accuracy_clf = calculate_metrics(y_true_clf, y_pred_clf)\n",
    "print(f\"Metrics for clf:\\nSensitivity: {sensitivity_clf}, Specificity: {specificity_clf}, Accuracy: {accuracy_clf}\")\n",
    "\n",
    "# Visualize confusion matrix for clf\n",
    "disp_clf = ConfusionMatrixDisplay(confusion_matrix=cm_clf, display_labels=[\"Paper\", \"Hard\"])\n",
    "disp_clf.plot(cmap=\"Blues\")\n",
    "plt.title(\"Confusion Matrix for clf\")\n",
    "plt.show()\n",
    "\n",
    "# Step 5: Calculate metrics and visualize confusion matrix for clf2\n",
    "cm_clf2, sensitivity_clf2, specificity_clf2, accuracy_clf2 = calculate_metrics(y_true_clf2, y_pred_clf2)\n",
    "print(f\"Metrics for clf2:\\nSensitivity: {sensitivity_clf2}, Specificity: {specificity_clf2}, Accuracy: {accuracy_clf2}\")\n",
    "\n",
    "# Visualize confusion matrix for clf2\n",
    "disp_clf2 = ConfusionMatrixDisplay(confusion_matrix=cm_clf2, display_labels=[\"Paper\", \"Hard\"])\n",
    "disp_clf2.plot(cmap=\"Oranges\")\n",
    "plt.title(\"Confusion Matrix for clf2\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e43e514",
   "metadata": {},
   "source": [
    "Sensitivity\n",
    "The first model (clf) detected 80% of positive instances (e.g., \"Hardcover\" books) with a sensitivity of 0.8. Since it misses 20% of positive situations, the model may be improved. The second model (clf2) only detected 60% of positive instances due to its sensitivity of 0.6. This decreased sensitivity means clf2 struggles to recognize \"Hardcover\" books, making it less dependable for positive case identification tasks.\n",
    "\n",
    "Specificity\n",
    "The first model (clf) properly identified 83.3% of negative instances (e.g., \"Paperback\" books) with a specificity of 0.833. This demonstrates that the model avoids false positives well. However, the second model (clf2) classifies negative instances perfectly with a specificity of 1.0. Since clf2 never misclassifies \"Paperback\" books as \"Hardcover,\" it is exceptionally exact.\n",
    "\n",
    "Accuracy\n",
    "The first model (clf) categorized 80% of samples, including positive and negative instances, with an accuracy of 0.8. This shows balanced positive and negative case detection. The second model (clf2) categorized 70% of samples with an accuracy of 0.7. Due to its lesser sensitivity, clf2 has worse accuracy than clf despite having complete specificity. This shows that clf2 avoids false positives well, but its inability to collect positive situations hurts its effectiveness.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec680e40",
   "metadata": {},
   "source": [
    "Chatbot Session for Question 6: https://chatgpt.com/share/6747c83d-7f04-800e-986a-61fa794b57a3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c43ed7a",
   "metadata": {},
   "source": [
    "7. Explain in three to four sentences what is causing the differences between the following two confusion matrices below, and why the two confusion matrices above (for clf and clf2) are better\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b7594b3",
   "metadata": {},
   "source": [
    "The model training feature sets cause the confusion matrices to vary. Limited information from the `List Price` feature in the initial confusion matrix (based on `clf`) leads to increased misclassifications and more false positives (FP) and false negatives (FN). The second confusion matrix, based on `clf2`, utilizes three features: `NumPages`, `Thick`, and `List Price`, yielding stronger information, minimizing mistakes and improving predictions. The confusion matrix for `clf2` shows improved sensitivity, specificity, and accuracy, highlighting the usefulness of many features in classification tasks."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24ebc8b5",
   "metadata": {},
   "source": [
    "Chatbot Session for Question 7: https://chatgpt.com/share/6747c92b-fab0-800e-aa94-34cf4564698d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8fbf4572",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
